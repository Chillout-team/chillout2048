version: "3.9"

services:
    mongo:
        image: mongo
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
    client:
        container_name: prakticum-client
        image: prakticum-client
        build:
            context: .
            dockerfile: Dockerfile.client
            args:
                CLIENT_PORT: ${CLIENT_PORT}
        restart: always
        ports:
            - "${CLIENT_PORT}:80"
        environment:
            - CLIENT_PORT=${CLIENT_PORT}
            - SERVER_PORT=${SERVER_PORT}
        depends_on:
            - server
    server:
        container_name: prakticum-server
        image: prackicum-server
        build:
            context: .
            dockerfile: Dockerfile.server
            args:
                SERVER_PORT: ${SERVER_PORT}
        env_file: .env
        restart: always
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        environment:
            SERVER_PORT: ${SERVER_PORT}
        command: ./wait_for.sh mongo:27017 -- node init.js
        depends_on:
            - postgres
            - mongo
        networks:
            - chillout2048
    postgres:
        container_name: postgres
        image: postgres:14
        restart: always
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - ./tmp/postgres-data:/var/lib/postgresql/data
        networks:
            - chillout2048
    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:7.1
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
            PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
        ports:
            - "${PGADMIN_PORT}:${PGADMIN_LISTEN_PORT}"
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        depends_on:
            - postgres
        networks:
            - chillout2048

volumes:
    postgres-data:
        external: false
    pgadmin-data:
        external: false

networks:
    chillout2048:
        driver: bridge

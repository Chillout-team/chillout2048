version: "3.9"

services:
    postgres:
        container_name: postgres
        image: postgres:14
        restart: always
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        depends_on: 
            - acme-companion
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - ./tmp/pgdata:/var/lib/postgresql/data
        networks:
            - chillout2048
        healthcheck:
            test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
            interval: 10s
            timeout: 5s
            retries: 5
    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:4.18
        restart: always
        networks:
            - chillout2048
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
            PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
        ports:
            - "${PGADMIN_PORT}:${PGADMIN_LISTEN_PORT}"
        volumes:
            - ./tmp/pgadmin:/var/lib/pgadmin
        depends_on:
            postgres:
                condition: service_healthy
    client:
        container_name: prakticum-client
        image: prakticum-client
        build:
            context: .
            dockerfile: Dockerfile.client
            args:
                CLIENT_PORT: ${CLIENT_PORT}
        restart: always
        ports:
            - "${CLIENT_PORT}:80"
        environment:
            - CLIENT_PORT=${CLIENT_PORT}
            - SERVER_PORT=${SERVER_PORT}
        depends_on:
            - server
    server:
        container_name: prakticum-server
        image: prackicum-server
        build:
            context: .
            dockerfile: Dockerfile.server
            args:
                SERVER_PORT: ${SERVER_PORT}
        env_file: .env
        restart: always
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        environment:
            SERVER_PORT: ${SERVER_PORT}
        command: ./wait_for.sh postgres:${POSTGRES_PORT} -- node /app/server/index.js
        depends_on:
            - postgres
        networks:
            - chillout2048
    nginx-proxy:
        image: nginxproxy/nginx-proxy
        container_name: nginx-proxy
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - conf:/etc/nginx/conf.d
            - vhost:/etc/nginx/vhost.d
            - html:/usr/share/nginx/html
            - certs:/etc/nginx/certs:ro
            - /var/run/docker.sock:/tmp/docker.sock:ro
        networks:
            - chillout2048
    acme-companion:
        image: nginxproxy/acme-companion
        container_name: nginx-proxy-acme
        restart: always
        depends_on:
            - nginx-proxy
        volumes_from:
            - nginx-proxy
        volumes:
            - certs:/etc/nginx/certs:rw
            - acme:/etc/acme.sh
            - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
    conf:
    vhost:
    html:
    certs:
    acme:

networks:
    chillout2048:
        driver: bridge
